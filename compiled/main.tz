{ parameter
    (or (list %transfer
           (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
        (or (pair %balance_of
               (list %requests (pair (address %owner) (nat %token_id)))
               (contract %callback
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                   (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (pair (address %extension) (big_map %ledger (pair address nat) nat))
                (big_map %metadata string bytes)
                (big_map %operators (pair address address) (set nat)))
          (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         LAMBDA
           (pair (big_map (pair address nat) nat) address nat)
           nat
           { UNPAIR 3 ; DUG 2 ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (big_map (pair address nat) nat) address nat nat)
           (big_map (pair address nat) nat)
           { UNPAIR 4 ; DIG 3 ; SOME ; DIG 3 ; DIG 3 ; PAIR ; UPDATE } ;
         LAMBDA
           address
           unit
           { PUSH string "The sender can only manage operators for his own token" ;
             SENDER ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DROP ;
             DUP 2 ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             ITER { UNPAIR ;
                    DUG 2 ;
                    ITER { UNPAIR 3 ;
                           DUP 6 ;
                           CDR ;
                           DUP 3 ;
                           GET ;
                           IF_NONE { DUP 9 ; FAILWITH } { DROP } ;
                           SENDER ;
                           DUP 6 ;
                           DUP 2 ;
                           COMPARE ;
                           EQ ;
                           IF { DROP }
                              { DUP 7 ;
                                CAR ;
                                CDR ;
                                CDR ;
                                SWAP ;
                                DUP 7 ;
                                PAIR ;
                                GET ;
                                IF_NONE { EMPTY_SET nat } {} ;
                                DUP 3 ;
                                MEM ;
                                IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } ;
                           DUP 2 ;
                           DUP 6 ;
                           DUP 6 ;
                           PAIR 3 ;
                           DUP 9 ;
                           SWAP ;
                           EXEC ;
                           DUP 4 ;
                           DUP 2 ;
                           COMPARE ;
                           GE ;
                           IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                           DUP 4 ;
                           SWAP ;
                           SUB ;
                           ABS ;
                           DUP 3 ;
                           DUP 7 ;
                           DIG 6 ;
                           PAIR 4 ;
                           DUP 7 ;
                           SWAP ;
                           EXEC ;
                           DUP 3 ;
                           DUP 3 ;
                           DUP 3 ;
                           PAIR 3 ;
                           DUP 9 ;
                           SWAP ;
                           EXEC ;
                           DIG 4 ;
                           ADD ;
                           DUG 3 ;
                           PAIR 4 ;
                           DUP 4 ;
                           SWAP ;
                           EXEC } ;
                    SWAP ;
                    DROP } ;
             DIG 2 ;
             DIG 3 ;
             DIG 4 ;
             DROP 3 ;
             DUP 2 ;
             DIG 2 ;
             CAR ;
             DUP ;
             CAR ;
             DIG 3 ;
             UPDATE 2 ;
             UPDATE 1 ;
             UPDATE 1 ;
             NIL operation }
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 2 ;
                 DROP ;
                 UNPAIR ;
                 MAP { DUP ;
                       UNPAIR ;
                       DUP 5 ;
                       CDR ;
                       DUP 3 ;
                       GET ;
                       IF_NONE { DUP 7 ; FAILWITH } { DROP } ;
                       DUP 5 ;
                       CAR ;
                       CAR ;
                       CDR ;
                       PAIR 3 ;
                       DUP 5 ;
                       SWAP ;
                       EXEC ;
                       SWAP ;
                       PAIR } ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 SWAP ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 TRANSFER_TOKENS ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS }
               { DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 DUP 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 ITER { IF_LEFT
                          { UNPAIR 3 ;
                            DUP 2 ;
                            DUP 2 ;
                            COMPARE ;
                            EQ ;
                            IF { DROP 3 }
                               { DUP ;
                                 DUP 7 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 DUP 4 ;
                                 DIG 4 ;
                                 DUP 4 ;
                                 DUP 4 ;
                                 PAIR ;
                                 GET ;
                                 IF_NONE { EMPTY_SET nat } {} ;
                                 DIG 4 ;
                                 PUSH bool True ;
                                 SWAP ;
                                 UPDATE ;
                                 SOME ;
                                 DIG 3 ;
                                 DIG 3 ;
                                 PAIR ;
                                 UPDATE } }
                          { UNPAIR 3 ;
                            DUP 2 ;
                            DUP 2 ;
                            COMPARE ;
                            EQ ;
                            IF { DROP 3 }
                               { DUP ;
                                 DUP 7 ;
                                 SWAP ;
                                 EXEC ;
                                 DROP ;
                                 DUP 4 ;
                                 DIG 4 ;
                                 DUP 4 ;
                                 DUP 4 ;
                                 PAIR ;
                                 GET ;
                                 IF_NONE
                                   { DIG 3 ; DROP ; NONE (set nat) }
                                   { DIG 4 ;
                                     PUSH bool False ;
                                     SWAP ;
                                     UPDATE ;
                                     PUSH nat 0 ;
                                     DUP 2 ;
                                     SIZE ;
                                     COMPARE ;
                                     EQ ;
                                     IF { DROP ; NONE (set nat) } { SOME } } ;
                                 DIG 3 ;
                                 DIG 3 ;
                                 PAIR ;
                                 UPDATE } } } ;
                 DIG 2 ;
                 DROP ;
                 DUP 2 ;
                 DIG 2 ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DIG 3 ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 NIL operation } } ;
         PAIR } }

